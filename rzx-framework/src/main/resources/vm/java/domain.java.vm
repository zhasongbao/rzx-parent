package ${packageName}.model.domain.${moduleName};

#foreach ($import in $importList)
import ${import};
#end
#foreach ($column in $columns)
###if($column.javaField == 'createTime' || $column.javaField == 'updateTime')
##import java.time.LocalDateTime;
##    #break
###end
#if($column.javaType == 'Date')
import com.fasterxml.jackson.annotation.JsonFormat;
#break
#elseif($column.javaType == 'LocalDateTime')
    #break
#elseif($column.javaType == 'LocalDate')
    #break
#end
#end
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.rzx.common.core.domain.BaseEntity;
import com.rzx.common.annotation.Excel;
import com.baomidou.mybatisplus.annotation.IdType;
import com.baomidou.mybatisplus.annotation.TableName;
import com.baomidou.mybatisplus.annotation.TableField;
import lombok.Builder;
import lombok.Data;
import lombok.experimental.Tolerate;
import com.baomidou.mybatisplus.annotation.TableId;
#if($table.crud || $table.sub)
#elseif($table.tree)
#end

/**
 * ${functionName}对象 ${tableName}
 *
 * @author ${author}
 * @date ${datetime}
 */
#if($table.crud || $table.sub)
#set($Entity="BaseEntity")
#elseif($table.tree)
#set($Entity="TreeEntity")
#end
@Data
@Builder
@TableName("${tableName}")
@ApiModel(value = "${functionName}对象", description = "${functionName}${tableName}表")
public class ${ClassName} extends BaseEntity {

    private static final long serialVersionUID = 1L;

    @Tolerate
    public ${ClassName}() {
    }

#foreach ($column in $columns)
#if(!$table.isSuperColumn($column.javaField))
    /** $column.columnComment */
#if($column.list)
#set($parentheseIndex=$column.columnComment.indexOf("（"))
#if($parentheseIndex != -1)
#set($comment=$column.columnComment.substring(0, $parentheseIndex))
#else
#set($comment=$column.columnComment)
#end
#if($parentheseIndex != -1)
    @Excel(name = "${comment}", readConverterExp = "$column.readConverterExp()")
#elseif($column.javaType == 'Date' || $column.javaType == 'LocalDateTime')
    @JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss", timezone = "GMT+8")
    @Excel(name = "${comment}", width = 30, dateFormat = "yyyy-MM-dd HH:mm:ss")
#elseif($column.javaType == 'LocalDate')
    @JsonFormat(pattern = "yyyy-MM-dd", timezone = "GMT+8")
    @Excel(name = "${comment}", width = 20, dateFormat = "yyyy-MM-dd")
#else
    @Excel(name = "${comment}")
#end
#end
    #if(${column.isPk} == 1)
@ApiModelProperty(value = "${column.columnComment}")
    @TableId(value ="${column.columnName}", type = IdType.ASSIGN_ID)
    private $column.javaType $column.javaField;
    #else
@ApiModelProperty(value = "${column.columnComment}")
    @TableField(value = "${column.columnName}")
    private $column.javaType $column.javaField;
    #end

#end
#end
#if($table.sub)
    /** $table.subTable.functionName信息 */
    private List<${subClassName}> ${subclassName}List;

#end
#foreach ($column in $columns)
#if(!$table.isSuperColumn($column.javaField))
#if($column.javaField.length() > 2 && $column.javaField.substring(1,2).matches("[A-Z]"))
#set($AttrName=$column.javaField)
#else
#set($AttrName=$column.javaField.substring(0,1).toUpperCase() + ${column.javaField.substring(1)})
#end
##    public void set${AttrName}($column.javaType $column.javaField)
##    {
##        this.$column.javaField = $column.javaField;
##    }
##
##    public $column.javaType get${AttrName}()
##    {
##        return $column.javaField;
##    }
#end
#end

#if($table.sub)
    public List<${subClassName}> get${subClassName}List() {
        return ${subclassName}List;
    }

    public void set${subClassName}List(List<${subClassName}> ${subclassName}List) {
        this.${subclassName}List = ${subclassName}List;
    }
#end
###foreach ($column in $columns)
##    #if(${column.isPk} == 1)
##@Override
##    protected Serializable pkVal() {
##      return this.$column.javaField;
##    }
###end
###end

}
