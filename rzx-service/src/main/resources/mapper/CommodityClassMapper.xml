<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rzx.project.mapper.CommodityClassMapper">

    <resultMap type="CommodityClass" id="CommodityClassResult">
        <result property="commodityclassId"    column="commodityclass_id"    />
        <result property="code"    column="code"    />
        <result property="name"    column="name"    />
        <result property="level"    column="level"    />
        <result property="provid"    column="provid"    />
        <result property="parentid"    column="parentid"    />
        <result property="status"    column="status"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectCommodityClassVo">
        select commodityclass_id, code, name, level, provid, parentid, status, create_time, update_time from rzx_commodity_class
    </sql>

    <select id="selectCommodityClassList" parameterType="CommodityClass" resultMap="CommodityClassResult">
        <include refid="selectCommodityClassVo"/>
        <where>
            <if test="code != null  and code != ''"> and code = #{code}</if>
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="level != null  and level != ''"> and level = #{level}</if>
            <if test="provid != null  and provid != ''"> and provid = #{provid}</if>
            <if test="parentid != null  and parentid != ''"> and parentid = #{parentid}</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
        </where>
    </select>

    <select id="selectCommodityClassById" parameterType="String" resultMap="CommodityClassResult">
        <include refid="selectCommodityClassVo"/>
        where commodityclass_id = #{commodityclassId}
    </select>


    <update id="updateCommodityClass" parameterType="CommodityClass">
        update rzx_commodity_class
        <trim prefix="SET" suffixOverrides=",">
            <if test="code != null">code = #{code},</if>
            <if test="name != null">name = #{name},</if>
            <if test="level != null">level = #{level},</if>
            <if test="provid != null">provid = #{provid},</if>
            <if test="parentid != null">parentid = #{parentid},</if>
            <if test="status != null">status = #{status},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where commodityclass_id = #{commodityclassId}
    </update>

    <delete id="deleteCommodityClassById" parameterType="String">
        delete from rzx_commodity_class where commodityclass_id = #{commodityclassId}
    </delete>

    <delete id="deleteCommodityClassByIds" parameterType="String">
        delete from rzx_commodity_class where commodityclass_id in
        <foreach item="commodityclassId" collection="array" open="(" separator="," close=")">
            #{commodityclassId}
        </foreach>
    </delete>

    <!-- 批量插入 -->
    <insert id="batchInsertOrUpdate" parameterType="com.rzx.project.domain.CommodityClass">
        insert into
        rzx_commodity_class
        (
            CODE,
            `NAME`,
            `LEVEL`,
            PROVID,
            PARENTID,
            STATUS,
            CREATE_TIME,
            UPDATE_TIME,
            COMMODITYCLASS_ID
        )
        values
        <foreach collection="list" item="item" separator=",">
            (
            #{item.code},
            #{item.name},
            #{item.level},
            #{item.provid},
            #{item.parentId},
            #{item.status},
            #{item.createTime},
            #{item.updateTime},
            #{item.commodityclassId}
            )
        </foreach>
        ON DUPLICATE KEY UPDATE
        UPDATE_TIME = now(),
        `NAME` = VALUES(`name`),
        `LEVEL` = VALUES(`level`),
        PARENTID = VALUES(parentId),
        STATUS = VALUES(status)
    </insert>
</mapper>
